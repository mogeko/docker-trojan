name: update-bot

on:
  push:
    branches:
      - master
  schedule:
    - cron: '30 0 * * *'

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      trojan_ver: ${{ steps.check_ver.outputs.trojan_ver }}
      img_ver: ${{ steps.check_ver.outputs.img_ver }}
      is_new: ${{ steps.check_ver.outputs.is_new }}
      latest: ${{ steps.check_ver.outputs.latest }}
      edge: ${{ steps.check_ver.outputs.edge }}
      sha: ${{ steps.check_ver.outputs.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check version
        id: check_ver
        run: |
          IMG_TAGS=$(curl -s "${GHCR_URL}" | grep -Po "tag=(\w|\.|-r)+" | cut -d '=' -f 2)
          NEW_TAG=$(curl -s "${API_REPO_TAGS}" | jq -r '.[0].name')
          HEAD_SHA=$(curl -s "${API_REPO_REFS}/heads/master" | jq -r '.object.sha')
          TAG_SHA=$(curl -s "${API_REPO_REFS}/tags/${NEW_TAG}" | jq -r '.object.sha')
          TROJAN_VER=$(jq -r '.version' ./latest.json)
          PKG_REL=$(jq -r '.pkgrel' ./latest.json)
          if [[ ${{ github.event_name }} == 'push' ]]; then
            TAG_SHA=$(curl -s "${API_REPO_REFS}/tags/${TROJAN_VER}" | jq -r '.object.sha')
            IMG_VER="${TROJAN_VER#v}-r${PKG_REL}"
          else
            TROJAN_VER="${NEW_TAG%.zip}"
            IMG_VER="${TROJAN_VER#v}-r0"
          fi
          if [[ ! ${IMG_TAGS} =~ ${HEAD_SHA:0:7} ]]; then
            echo "::set-output name=is_new::yes"
            echo "::set-output name=edge::type=edge"
            echo "::set-output name=sha::type=raw,${HEAD_SHA:0:7}"
            echo "::set-output name=trojan_ver::master"
          fi
          if [[ ! ${IMG_TAGS} =~ ${IMG_VER} ]]; then
            echo "::set-output name=is_new::yes"
            echo "::set-output name=latest::type=raw,latest"
            echo "::set-output name=img_ver::type=raw,${IMG_VER}"
            echo "::set-output name=sha::type=raw,${TAG_SHA:0:7}"
            echo "::set-output name=trojan_ver::${TROJAN_VER}"
          fi
        env:
          GHCR_URL: https://github.com/mogeko/docker-trojan/pkgs/container/trojan/versions
          API_REPO_TAGS: https://api.github.com/repos/trojan-gfw/trojan/tags
          API_REPO_REFS: https://api.github.com/repos/trojan-gfw/trojan/git/refs

  build:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.is_new == 'yes' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v1.14.1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.6.2
        with:
          images: |
            ${{ github.repository_owner }}/trojan
            ghcr.io/${{ github.repository_owner }}/trojan
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD'}}
            ${{ needs.check.outputs.img_ver }}
            ${{ needs.check.outputs.latest }}
            ${{ needs.check.outputs.edge }}
            ${{ needs.check.outputs.sha }}
      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TROJAN_VERSION=${{ needs.check.outputs.trojan_ver }}
      - name: Save metadata
        run: echo ${{ toJSON(steps.build.outputs.metadata) }} > ${{ github.workspace }}/meta.json

      - name: Update metadata
        uses: actions/upload-artifact@v2
        with:
          name: metadata
          path: ${{ github.workspace }}/meta.json
